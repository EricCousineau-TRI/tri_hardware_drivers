def ur_driver_program():
    popup("Starting driver script...")
    PC_IP_ADDRESS = "172.31.1.100"
    PC_CONTROL_PORT = 50007
    FLOAT_CONVERSION = 1000000
    MODE_IDLE = 0
    MODE_TEACH = 1
    MODE_SPEEDJ = 2
    MODE_SPEEDL = 3
    MODE_WRENCH = 4
    RIGID_MODE = 0
    FORCE_MODE = 1
    command_speed = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    command_wrench = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    command_force_mode_limits = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    command_force_mode_selection_vector = [0, 0, 0, 0, 0, 0]
    command_control_mode = MODE_IDLE
    command_force_mode = RIGID_MODE
    def update_command(speed, wrench, fml, fmsv, control_mode, force_mode):
        enter_critical
        command_speed = speed
        command_wrench = wrench
        command_force_mode_limits = fml
        command_force_mode_selection_vector = fmsv
        command_control_mode = control_mode
        command_force_mode = force_mode
        exit_critical
    end
    thread command_thread():
        active_speed = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
        active_wrench = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
        active_force_mode_limits = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
        active_force_mode_selection_vector = [0, 0, 0, 0, 0, 0]
        active_control_mode = MODE_IDLE
        active_force_mode = RIGID_MODE
        while True:
            enter_critical
            cmd_speed = command_speed
            cmd_wrench = command_wrench
            force_mode_limits = command_force_mode_limits
            force_mode_selection_vector = command_force_mode_selection_vector
            control_mode = command_control_mode
            force_mode = command_force_mode
            exit_critical
            if (active_control_mode == MODE_TEACH) and (control_mode != MODE_TEACH):
                active_control_mode = MODE_IDLE
                end_teach_mode()
            elif (active_control_mode != MODE_TEACH) and (control_mode == MODE_TEACH):
                active_control_mode = MODE_TEACH
                stopj(1.0);
                teach_mode()
            elif (active_control_mode != MODE_IDLE) and (control_mode == MODE_IDLE):
                active_control_mode = MODE_IDLE
                stopj(1.0)
            end
            if (active_force_mode != FORCE_MODE) and (force_mode == FORCE_MODE):
                active_force_mode = FORCE_MODE
                force_mode(get_actual_tcp_pose(), selection_vector, cmd_wrench, 2, force_mode_limits)
            elif (active_force_mode != RIGID_MODE) and (force_mode == RIGID_MODE):
                active_force_mode = RIGID_MODE
                end_force_mode()
            end
            if control_mode == MODE_SPEEDJ:
                active_control_mode = MODE_SPEEDJ
                speedj(cmd_speed, 1.57, 0.008)
            elif control_mode == MODE_SPEEDL:
                active_control_mode = MODE_SPEEDL
                speedl(cmd_speed, 1.57, 0.008)
            else:
                sync()
            end
        end
    end
    socket_open(PC_IP_ADDRESS, PC_CONTROL_PORT)
    thread_command = run command_thread()
    running = 1
    while running == 1:
        params = socket_read_binary_integer(6 + 6 + 6 + 6 + 3)
        valid_data = params[0]
        if valid_data > 0:
            speed = [params[1] / FLOAT_CONVERSION,
                     params[2] / FLOAT_CONVERSION,
                     params[3] / FLOAT_CONVERSION,
                     params[4] / FLOAT_CONVERSION,
                     params[5] / FLOAT_CONVERSION,
                     params[6] / FLOAT_CONVERSION]
            wrench = [params[7] / FLOAT_CONVERSION,
                      params[8] / FLOAT_CONVERSION,
                      params[9] / FLOAT_CONVERSION,
                      params[10] / FLOAT_CONVERSION,
                      params[11] / FLOAT_CONVERSION,
                      params[12] / FLOAT_CONVERSION]
            force_mode_limits = [params[13] / FLOAT_CONVERSION,
                                 params[14] / FLOAT_CONVERSION,
                                 params[15] / FLOAT_CONVERSION,
                                 params[16] / FLOAT_CONVERSION,
                                 params[17] / FLOAT_CONVERSION,
                                 params[18] / FLOAT_CONVERSION]
            force_mode_selection_vector = [params[19],
                                           params[20],
                                           params[21],
                                           params[22],
                                           params[23],
                                           params[24]]
            control_mode = params[25]
            force_mode = params[26]
            running = params[27]
            if running == 1:
                update_command(speed, wrench, force_mode_limits, force_mode_selection_vector, control_mode, force_mode)
            else:
                update_command([0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                               [0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                               [0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                               [0, 0, 0, 0, 0, 0], MODE_IDLE, RIGID_MODE)
            end
        end
    end
    sleep(0.1)
    socket_close()
    kill thread_command
end
